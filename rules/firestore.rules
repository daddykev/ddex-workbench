rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // API keys - users can only read/write their own keys
    match /api_keys/{keyId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.active == true;
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow delete: if false; // Soft delete only via update
    }
    
    // Snippets - public read, authenticated write
    match /snippets/{snippetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.author.uid;
    }
    
    // Validation history - users can only read/write their own
    match /validation_history/{historyId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // User votes subcollection
    match /users/{userId}/votes/{voteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
  }
}